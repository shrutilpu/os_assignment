#include<stdio.h>
#include<conio.h>
int main() 
{ 
// P0, P1, P2, P3, P4 are the Process  
  
    int n, m, i, j, k; 
     printf("enter the no of processes: ");
    scanf("%d",&n); // Number of process
    printf("enter the no of resources: ");
    scanf("%d",&m); //number of resources
    
    int allocate[n][m];
    for(i=0;i<n;i++)//initializing  allocated
    {printf("enter values of allocated resources for p %d \n",i);
    	for(j=0;j<m;j++)
    { 
	scanf("%d",&allocate[i][j]); }
	}
 
  int max[n][m];
  for(i=0;i<n;i++)//initializing max
    {printf("enter values of max resources for p %d \n",i);
    	for(j=0;j<m;j++)
    {
	 scanf("%d",&max[i][j]); }
	}
    
 int avail[m];  // Available Resources
	printf("enter values of available resources"); 
	int s;
  for(s=0;s<m;s++)
	   { scanf("%d",&avail[s]); }
    
    int finish[n], p[n], ind = 0; 
    for (k = 0; k < n; k++) { 
        finish[k] = 0; 
    } 
    int need[n][m]; //calculating need
    for (i = 0; i < n; i++) { 
        for (j = 0; j < m; j++) 
            need[i][j] = max[i][j] - allocate[i][j]; 
    } 
    for (k = 0; k < 5; k++) { 
        for (i = 0; i < n; i++) { 
            if (finish[i] == 0) { 
  
                int flag = 0; 
                for (j = 0; j < m; j++) { 
                    if (need[i][j] > avail[j]){ 
                        flag = 1; 
                         break; 
                    } 
                } 
  
                if (flag == 0) { 
                    p[ind++] = i; 
                    for (int y = 0; y < m; y++) 
                       { avail[y] += allocate[i][y]; }
                    f[i] = 1; 
                } 
            } 
        } 
    } 
  
    printf(" The SAFE Sequence Obtained Is\n"); 
    for (i = 0; i < n - 1; i++) 
       { printf(" P%d ->", p[i]); }
    printf(" P%d", p[n - 1]); 
  } 
